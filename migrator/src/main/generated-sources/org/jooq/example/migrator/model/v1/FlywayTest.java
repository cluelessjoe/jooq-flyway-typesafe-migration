/*
 * This file is generated by jOOQ.
*/
package org.jooq.example.migrator.model.v1;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.example.migrator.model.v1.tables.v1_AUTHOR;
import org.jooq.example.migrator.model.v1.tables.v1_BOOK;
import org.jooq.example.migrator.model.v1.tables.v1_schema_version;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2",
        "schema version:FLYWAY_TEST_1"
    },
    date = "2017-05-03T20:59:30.778Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FlywayTest extends SchemaImpl {

    private static final long serialVersionUID = 1563877198;

    /**
     * The reference instance of <code>FLYWAY_TEST</code>
     */
    public static final FlywayTest FLYWAY_TEST = new FlywayTest();

    /**
     * The table <code>FLYWAY_TEST.AUTHOR</code>.
     */
    public final v1_AUTHOR v1_AUTHOR = org.jooq.example.migrator.model.v1.tables.v1_AUTHOR.v1_AUTHOR;

    /**
     * The table <code>FLYWAY_TEST.BOOK</code>.
     */
    public final v1_BOOK v1_BOOK = org.jooq.example.migrator.model.v1.tables.v1_BOOK.v1_BOOK;

    /**
     * The table <code>FLYWAY_TEST.schema_version</code>.
     */
    public final v1_schema_version v1_schema_version = org.jooq.example.migrator.model.v1.tables.v1_schema_version.v1_schema_version;

    /**
     * No further instances allowed
     */
    private FlywayTest() {
        super("FLYWAY_TEST", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.S_AUTHOR_ID);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            v1_AUTHOR.v1_AUTHOR,
            v1_BOOK.v1_BOOK,
            v1_schema_version.v1_schema_version);
    }
}
