/*
 * This file is generated by jOOQ.
*/
package org.jooq.example.migrator.model.v2;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.example.migrator.model.v2.tables.v2_Author;
import org.jooq.example.migrator.model.v2.tables.v2_Book;
import org.jooq.example.migrator.model.v2.tables.v2_SchemaVersion;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2",
        "schema version:FLYWAY_TEST_2"
    },
    date = "2017-05-14T20:59:56.850Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class v2_FlywayTest extends SchemaImpl {

    private static final long serialVersionUID = -482825006;

    /**
     * The reference instance of <code>FLYWAY_TEST</code>
     */
    public static final v2_FlywayTest v2_FLYWAY_TEST = new v2_FlywayTest();

    /**
     * The table <code>FLYWAY_TEST.AUTHOR</code>.
     */
    public final v2_Author v2_AUTHOR = org.jooq.example.migrator.model.v2.tables.v2_Author.v2_AUTHOR;

    /**
     * The table <code>FLYWAY_TEST.BOOK</code>.
     */
    public final v2_Book v2_BOOK = org.jooq.example.migrator.model.v2.tables.v2_Book.v2_BOOK;

    /**
     * The table <code>FLYWAY_TEST.schema_version</code>.
     */
    public final v2_SchemaVersion v2_SCHEMA_VERSION = org.jooq.example.migrator.model.v2.tables.v2_SchemaVersion.v2_SCHEMA_VERSION;

    /**
     * No further instances allowed
     */
    private v2_FlywayTest() {
        super("FLYWAY_TEST", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.v2_S_AUTHOR_ID);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            v2_Author.v2_AUTHOR,
            v2_Book.v2_BOOK,
            v2_SchemaVersion.v2_SCHEMA_VERSION);
    }
}
